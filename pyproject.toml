# NOTE: you have to use single-quoted strings in TOML for regular expressions.
# It's the equivalent of r-strings in Python.  Multiline strings are treated as
# verbose regular expressions by Black.  Use [ ] to denote a significant space
# character.

[tool.mypy]
python_version = "3.9"
ignore_missing_imports = true
follow_imports = "silent"
warn_redundant_casts = true
warn_unused_ignores = true
disallow_any_generics = true
check_untyped_defs = true
no_implicit_reexport = true

# for strict mypy: (this is the tricky one :-))
disallow_untyped_defs = true


[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
    "tests",
    "benchmark",
    "setup.py",
    "tools",
]

# Same as Black.
line-length = 120
indent-width = 4

# Assume Python 3.9.
target-version = "py39"

[tool.ruff.lint]
explicit-preview-rules = true

select = [
    "ALL",
]
ignore = [
"ANN001",
"PTH118",
"PLR2004",
"ANN003",
"D103",
"ANN201",
"FBT002",
"B006",
"PLR0912",
"C901",
"ARG001",
"T201",
"S101",
"N812",
"S108",
"PLR0913",
"ANN204",
"D105",
"D107",
"PLW2901",
"D102",
"D101",
"PTH100",
"PTH120",
"PTH119",
"PTH110",
"PTH103",
"S310",
"PTH206",
"NPY002",
"D415",
"N803",
"E402",
"S324",
"PTH123",
"EM101",
"UP006",
"TRY003",
"F403",
"E501"
]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

[tool.ruff.lint.pydocstyle]
convention = "google"
